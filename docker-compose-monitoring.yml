services:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    expose:
      - "9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - shared_network
    depends_on:
      - cadvisor
    labels:
      - "traefik.enable=true"
      # HTTP Service
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090" # important
      # HTTP Router ()
      - "traefik.http.routers.prometheus-http.rule=((Host(`mytoolings.xyz`) && PathPrefix(`/prometheus`))"
      - "traefik.http.routers.prometheus-http.entrypoints=web"
      # wwww to non-www redirect
      - "traefik.http.routers.prometheus-https.middlewares=www-to-non-www"
      # HTTPS Router
      - "traefik.http.routers.prometheus-https.rule=((Host(`mytoolings.xyz`)  || Host(`www.mytoolings.xyz`)) && PathPrefix(`/prometheus`))"
      - "traefik.http.routers.prometheus-https.entrypoints=websecure"
      - "traefik.http.routers.prometheus-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.prometheus-https.service=prometheus" # optional

  grafana:
    image: grafana/grafana-oss
    expose:
      - "3000"
    ports:
      - "3000:3000"
    labels:
      - t"raefik.enable=true"
      # HTTP Service
      - "traefik.http.services.grafana.loadbalancer.server.port=3000" # important
      # HTTP Router 
      - "traefik.http.routers.grafana-http.rule=((Host(`mytoolings.xyz`) && PathPrefix(`/grafana`))"
      - "traefik.http.routers.grafana-http.entrypoints=web"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.grafana-https.middlewares=www-to-non-www"
      # HTTPS Router
      - "traefik.http.routers.grafana-https.rule=((Host(`mytoolings.xyz`) && PathPrefix(`/grafana`))"
      - "traefik.http.routers.grafana-https.entrypoints=websecure"
      - "traefik.http.routers.grafana-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.grafana-https.service=grafana" # optional
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - shared_network
    depends_on:
      - loki
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - shared_network
    depends_on:
      - backend
      - frontend
      - adminer
      - traefik
      - db

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    networks:
      - shared_network
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:latest
    networks:
      - shared_network
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

volumes:
  grafana: